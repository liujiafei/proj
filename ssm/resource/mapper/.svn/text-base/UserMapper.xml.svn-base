<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="richinfo.mm.monitor.web.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="richinfo.mm.monitor.web.enties.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
   <!--  <result column="passwd" property="passwd" jdbcType="VARCHAR" /> -->
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="descp" property="descp" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="BIT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="rid" property="rid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, account, passwd, email, phone, descp, enable, createtime, rid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="richinfo.mm.monitor.web.enties.User">
  
    insert into user ( name, account, 
      passwd, email, phone, 
      descp, enable, createtime, 
      rid)
    values (#{name,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{passwd,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{descp,jdbcType=VARCHAR}, #{enable,jdbcType=BIT}, #{createtime,jdbcType=TIMESTAMP}, 
      #{rid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="richinfo.mm.monitor.web.enties.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="descp != null" >
        descp,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="rid != null" >
        rid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="descp != null" >
        #{descp,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=BIT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rid != null" >
        #{rid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="richinfo.mm.monitor.web.enties.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="descp != null" >
        descp = #{descp,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=BIT},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rid != null" >
        rid = #{rid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="richinfo.mm.monitor.web.enties.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      <if test="passwd!=null">
      passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      descp = #{descp,jdbcType=VARCHAR},
      enable = #{enable,jdbcType=BIT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      rid = #{rid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
   <update id="enable" parameterType="java.lang.String" >
    update user
    set
      enable = 1
    where account = #{account,jdbcType=INTEGER}
  </update>
  
  <update id="disable" parameterType="java.lang.String" >
    update user
    set
      enable = 0
    where account = #{account,jdbcType=INTEGER}
  </update>
  
  <select id="checkUser" resultMap="BaseResultMap" parameterType="richinfo.mm.monitor.web.enties.User">
  	select 
		<include refid="Base_Column_List"/> 
	from user
  	where account=#{account} and passwd=#{passwd}
  </select>
  
  <select id="checkUserByIdAndPassword" resultMap="BaseResultMap">
  	select 
		<include refid="Base_Column_List"/> 
	from user
  	where id=#{id} and passwd=#{password}
  </select>
  
  <update id="updatePasswordByIdAndPassword">
    update user
    set
      passwd = #{password},updatetime=now()
    where id = #{id} limit 1
  </update>
  
  
  <select id="selectCPIS" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
    select u.id, u.name, u.account, u.passwd, u.email, 
           u.phone, u.descp, u.enable, u.createtime, u.rid 
      from noticeconf_user nu JOIN user u ON nu.USER_ID=u.ID where NOTICE_ID=#{id,jdbcType=INTEGER}
  </select> 
   <select id="selectEmailNoticeUser" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
   		select u.id, u.name, u.account, u.passwd, u.email, u.phone, u.descp, u.enable, u.createtime, u.rid from ${i_EntityName} ar JOIN alarm_notice_records anr ON ar.ID=anr.ALAM_RES_ID 
          JOIN noticeconf_user nu ON anr.NOTICE_ID=nu.NOTICE_ID JOIN `user` u ON nu.USER_ID=u.ID
         WHERE ar.id=#{i_id,jdbcType=INTEGER} and anr.SEND_TYPE=1 LIMIT 0,10
   </select>   
   <select id="selectSMSNoticeUser" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
   		select u.id, u.name, u.account, u.passwd, u.email, u.phone, u.descp, u.enable, u.createtime, u.rid from ${i_EntityName} ar JOIN alarm_notice_records anr ON ar.ID=anr.ALAM_RES_ID 
          JOIN noticeconf_user nu ON anr.NOTICE_ID=nu.NOTICE_ID JOIN `user` u ON nu.USER_ID=u.ID
         WHERE ar.id=#{i_id,jdbcType=INTEGER} and anr.SEND_TYPE=2 LIMIT 0,10
   </select>   
   
   
   <select id="getListPage" parameterType="richinfo.mm.monitor.web.enties.User" resultMap="BaseResultMap">
   		select <include refid="Base_Column_List"/> from user 
   		<where>
   			<if test="user.account!=null">
   				and account like CONCAT('%',#{user.account},'%')  
   			</if>
   			<if test="user.name!=null">
   				and name like CONCAT('%',#{user.name},'%')  
   			</if>
   			<if test="user.rid!=null">
   				and rid = #{user.rid}
   			</if>
   			<if test="user.email!=null">
   				and email like CONCAT('%',#{user.email},'%')  
   			</if>
   			<if test="startTime!=null">
   				and createtime  &gt;= #{startTime}
   			</if>
   			<if test="endTime!=null">
   				and createtime  &lt;= #{endTime}
   			</if>
   		</where>
   		order by createtime desc
   </select>
   
   
</mapper>
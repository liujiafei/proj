<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="richinfo.mm.monitor.web.dao.AlarmConfMapperS" >
  <resultMap id="BaseResultMap" type="richinfo.mm.monitor.web.enties.AlarmConfS" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="page_conf_id" property="page_conf_id" jdbcType="INTEGER" />
  	<result column="notice_id" property="notice_id" jdbcType="INTEGER" />
  	<result column="scope" property="scope" jdbcType="INTEGER" />
  	<result column="enable" property="enable" jdbcType="INTEGER" />
  	<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
	<result column="lastmodifiedtime" property="lastmodifiedtime" jdbcType="TIMESTAMP" />
	<result column="descp" property="descp" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ListAlarmConfResultMap" type="richinfo.mm.monitor.web.enties.AlarmConfS" >
    <id column="alarm_conf_id" property="id" jdbcType="INTEGER" /> 
    <result column="alarm_conf_page_conf_id" property="page_conf_id" jdbcType="INTEGER" />
  	<result column="alarm_conf_notice_id" property="notice_id" jdbcType="INTEGER" />
  	<result column="alarm_conf_scope" property="scope" jdbcType="INTEGER" />
  	<result column="alarm_conf_enable" property="enable" jdbcType="INTEGER" />
  	<result column="alarm_conf_createtime" property="createtime" jdbcType="TIMESTAMP" />
	<result column="alarm_conf_lastmodifiedtime" property="lastmodifiedtime" jdbcType="TIMESTAMP" />
	<result column="alarm_conf_descp" property="descp" jdbcType="VARCHAR" />
	<association property="noticeConf"  column="alarm_conf_notice_id" javaType="richinfo.mm.monitor.web.enties.NoticeConfS" >
        <id property="id" column="notice_conf_id"/> 
        <result property="alarm_interval" column="notice_conf_alarm_interval"/>
        <result property="alarm_mail_set" column="notice_conf_alarm_mail_set"/>
        <result property="alarm_sms_set" column="notice_conf_alarm_sms_set"/>
        <result property="flapping" column="notice_conf_flapping"/>
        <result property="workday_begintime" column="notice_conf_workday_begintime"/>
        <result property="workday_endtime" column="notice_conf_workday_endtime"/>
        <result property="weekend_begintime" column="notice_conf_weekend_begintime"/>
        <result property="weekend_endtime" column="notice_conf_weekend_endtime"/>
        <result property="createtime" column="notice_conf_createtime"  jdbcType="TIMESTAMP" />
		<result property="lastmodifiedtime" column="notice_conf_lastmodifiedtime" jdbcType="TIMESTAMP" />
	</association>
	<association property="pageConf"  column="alarm_conf_page_conf_id" javaType="richinfo.mm.monitor.web.enties.PageConf" >
        <id property="id" column="page_conf_id"/> 
        <result property="name" column="page_conf_name"/>
        <result property="url_pattern" column="page_conf_url_pattern"/>
    </association>
	<collection property="alarmStrategy"  ofType="richinfo.mm.monitor.web.enties.AlarmStrategyS">
        <id property="id" column="alarm_strategy_id"/>
        <result property="index_id" column="alarm_strategy_index_id"/>
        <result property="alarm_conf_id" column="alarm_strategy_alam_conf_id"/>
        <result property="compare_oper" column="alarm_strategy_compare_oper"/>
        <result property="threshold" column="alarm_strategy_threshold"/>
        <result property="alarm_level" column="alarm_strategy_alarm_level"/>
        <result property="createtime" column="alarm_strategy_createtime"  jdbcType="TIMESTAMP" />
		<result property="lastmodifiedtime"  column="alarm_strategy_lastmodifiedtime" jdbcType="TIMESTAMP" />
		<result property="descp"  column="alarm_strategy_descp" jdbcType="VARCHAR" />
    	<result property="enable" column="alarm_strategy_enable"/> 
   	</collection> 
	<collection property="noticeConfUser"  ofType="richinfo.mm.monitor.web.enties.NoticeConfUser">
            <id property="notice_id" column="noticeconf_user_notice_id"/>
            <result property="user_id" column="noticeconf_user_user_id"/> 
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id
  </sql>
    <select id="selectAlarmConfByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
			select id,page_conf_id,notice_id,scope,enable,createtime,lastmodifiedtime,descp 
          from alarm_conf 
		where id = #{id}
	</select>
   <select id="selectAlarmConfResultList" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
   		select id,page_conf_id,notice_id,scope,enable,createtime,lastmodifiedtime,descp 
          from alarm_conf 
           ORDER BY lastmodifiedtime desc
   </select> 
   <select id="selectAarmConfDetailCount"  resultType="java.lang.Integer" parameterType="java.util.HashMap" >
   		select count(1) from (
		select a.*,  s.ENABLE s_enable,s.INDEX_ID from alarm_conf a inner JOIN alarm_strategy s on s.ALAM_CONF_ID=a.ID 
		 <where>
  		<if test="map.alarm_conf_id != null">
         	a.id = #{map.alarm_conf_id}
    	</if> 
    	<if test="map.page_conf_id !=null">
    		and a.page_conf_id = #{map.page_conf_id}	
    	</if>
    	<if test="map.enable !=null">
    		and a.enable = #{map.enable}	
    	</if>
    	<if test="map.index_id !=null">
    		and  s.ENABLE=0 and  s.INDEX_ID =#{map.index_id}	
    	</if>
		</where> 
		group by a.id
) a2
 		 
   </select>
   <select id="selectAlarmConfDetailList" resultMap="ListAlarmConfResultMap" parameterType="java.util.HashMap" >

 	 	 		select alarm_conf.id as alarm_conf_id ,alarm_conf.page_conf_id as alarm_conf_page_conf_id,alarm_conf.notice_id as alarm_conf_notice_id,alarm_conf.scope as alarm_conf_scope,alarm_conf.enable as alarm_conf_enable ,alarm_conf.createtime as alarm_conf_createtime ,alarm_conf.lastmodifiedtime as alarm_conf_lastmodifiedtime,alarm_conf.descp as alarm_conf_descp 
         , alarm_strategy.enable as alarm_strategy_enable , alarm_strategy.id as alarm_strategy_id,alarm_strategy.index_id as alarm_strategy_index_id,alarm_strategy.alam_conf_id as alarm_strategy_alam_conf_id,alarm_strategy.compare_oper as alarm_strategy_compare_oper,alarm_strategy.threshold as alarm_strategy_threshold,alarm_strategy.alarm_level as alarm_strategy_alarm_level,alarm_strategy.group_id as alarm_strategy_group_id,alarm_strategy.createtime as alarm_strategy_createtime,alarm_strategy.lastmodifiedtime as alarm_strategy_lastmodifiedtime,alarm_strategy.descp as alarm_strategy_descp
         ,notice_conf.id as notice_conf_id,notice_conf.ntype as notice_conf_ntype,notice_conf.alarm_interval as notice_conf_alarm_interval,notice_conf.alarm_mail_set as notice_conf_alarm_mail_set,notice_conf.alarm_sms_set as notice_conf_alarm_sms_set,notice_conf.flapping as notice_conf_flapping,notice_conf.workday_begtime as notice_conf_workday_begtime,notice_conf.workday_endtime as notice_conf_workday_endtime,notice_conf.weekend_begtime as notice_conf_weekend_begtime,notice_conf.weekend_endtime as notice_conf_weekend_endtime,notice_conf.createtime as notice_conf_createtime,notice_conf.lastmodifiedtime as notice_conf_lastmodifiedtime 
				 ,noticeconf_user.notice_id as noticeconf_user_notice_id,noticeconf_user.user_id as noticeconf_user_user_id
				 ,page_conf.id as page_conf_id,page_conf.name as page_conf_name,page_conf.url_pattern as page_conf_url_pattern
		from (select * from (
	select a.*,  s.ENABLE s_enable,s.INDEX_ID from alarm_conf a inner JOIN alarm_strategy s on s.ALAM_CONF_ID=a.ID 
		 <where>
  		<if test="map.alarm_conf_id != null">
         	a.id = #{map.alarm_conf_id}
    	</if> 
    	<if test="map.page_conf_id !=null">
    		and a.page_conf_id = #{map.page_conf_id}	
    	</if>
    	<if test="map.enable !=null">
    		and a.enable = #{map.enable}	
    	</if>
    	<if test="map.index_id !=null">
    		and  s.ENABLE=0 and  s.INDEX_ID =#{map.index_id}	
    	</if>
		</where> 
		group by a.id
) a2
 	
	order by a2.lastmodifiedtime desc	limit  #{page.currentResult},#{page.showCount} 
	) alarm_conf
 left join page_conf on page_conf.id=alarm_conf.page_conf_id
 left outer join alarm_strategy on alarm_strategy.alam_conf_id=alarm_conf.id
          left outer join notice_conf on notice_conf.id=alarm_conf.notice_id
          left outer join noticeconf_user on noticeconf_user.notice_id=notice_conf.id
 		order by alarm_conf.lastmodifiedtime desc
 	</select>
 	<insert id="insertAlarmConf" keyProperty="id" useGeneratedKeys="true" parameterType="richinfo.mm.monitor.web.enties.AlarmConfS" >
 		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id"> 
            select last_insert_rowid() as id
        </selectKey>
 		insert into alarm_conf 
 		(id,page_conf_id,notice_id,scope,enable,createtime,lastmodifiedtime,descp)
 		values
 		(#{id},#{page_conf_id},#{notice_id},#{scope},#{enable},NOW(),NOW(),#{descp})
 	</insert>
   	<insert id="insertalarmStrategy" keyProperty="id" useGeneratedKeys="true" parameterType="richinfo.mm.monitor.web.enties.AlarmStrategyS" >
 		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id"> 
            select last_insert_rowid() as id
        </selectKey>
 		insert into alarm_strategy
 		(id,index_id,alam_conf_id,compare_oper,threshold,alarm_level,group_id,createtime,lastmodifiedtime,descp)
       	values
 		(#{id},#{index_id},#{alam_conf_id},#{compare_oper},#{threshold},#{alarm_level},#{group_id},NOW(),NOW(),#{descp})
 	</insert>
 	<insert id="insertNoticeConf" keyProperty="id" useGeneratedKeys="true" parameterType="richinfo.mm.monitor.web.enties.NoticeConfS" >
 		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id"> 
            select last_insert_rowid() as id
        </selectKey>
 		insert into notice_conf
 		(id,alam_conf_id,ntype,alarm_interval,alarm_mail_set,alarm_sms_set,flapping,workday_begtime,workday_endtime,weekend_begtime,weekend_endtime,createtime,lastmodifiedtime)
			values
 		(#{id},#{alam_conf_id},#{ntype},#{alarm_interval},#{alarm_mail_set},#{alarm_sms_set},#{flapping},#{workday_begtime},#{workday_endtime},#{weekend_begtime},#{weekend_endtime},NOW(),NOW())
 	</insert>
 	<insert id="insertNoticeConfUser"   parameterType="richinfo.mm.monitor.web.enties.NoticeConfUser" >
 		insert into noticeconf_user
 		(notice_id,user_id)
			values
 		(#{notice_id},#{user_id})
 	</insert>
 	<insert id="insertNoticeConfUserList"   parameterType="list" >
 		insert into noticeconf_user (notice_id,user_id)
 		values 
 		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.notice_id},#{item.user_id})
		</foreach>
 	</insert>
 	<delete id="deleteNoticeConfUserList" parameterType="java.util.HashMap">
    	delete from noticeconf_user
    	where notice_id = #{notice_id}
  	</delete>
  	<update id="updateAlarmConf" parameterType="richinfo.mm.monitor.web.enties.AlarmConfS" >
    update alarm_conf
    set 
    notice_id=#{notice_id,jdbcType=INTEGER},
    descp = #{descp,jdbcType=VARCHAR},
    lastmodifiedtime=NOW()
    where id = #{id,jdbcType=INTEGER}
  	</update>
  	<update id="updateAlarmConfMin" parameterType="richinfo.mm.monitor.web.enties.AlarmConfS" >
    update alarm_conf
    set 
    descp = #{descp,jdbcType=VARCHAR},
    lastmodifiedtime=NOW()
    where id = #{id,jdbcType=INTEGER}
  	</update>
  	<update id="updateAlarmStrategy" parameterType="richinfo.mm.monitor.web.enties.AlarmStrategyS" >
    update alarm_strategy
    set 
    threshold=#{threshold,jdbcType=INTEGER},
    lastmodifiedtime=NOW()
    where id = #{id,jdbcType=INTEGER}
  	</update>
  	<update id="updateNoticeConf" parameterType="richinfo.mm.monitor.web.enties.NoticeConfS" >
    update notice_conf
    set 
    ntype=#{ntype,jdbcType=INTEGER},
    alarm_interval=#{alarm_interval,jdbcType=INTEGER},
    alarm_mail_set=#{alarm_mail_set,jdbcType=INTEGER},
    alarm_sms_set=#{alarm_sms_set,jdbcType=INTEGER},
    flapping=#{flapping,jdbcType=INTEGER},
    workday_begtime=#{workday_begtime,jdbcType=INTEGER},
    workday_endtime=#{workday_endtime,jdbcType=INTEGER},
    weekend_begtime=#{weekend_begtime,jdbcType=INTEGER},
    weekend_endtime=#{weekend_endtime,jdbcType=INTEGER},
    alarm_sms_set=#{alarm_sms_set,jdbcType=INTEGER},
    lastmodifiedtime=NOW()
    where id = #{id,jdbcType=INTEGER}
  	</update>
  	<update id="updateStatus" parameterType="java.util.HashMap" >
  		update alarm_conf
  			set enable=#{status}
  			where id=#{id}
  	</update>
</mapper>
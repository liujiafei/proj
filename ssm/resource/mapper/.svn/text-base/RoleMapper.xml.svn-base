<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="richinfo.mm.monitor.web.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="richinfo.mm.monitor.web.enties.Role">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="descp" property="descp" jdbcType="VARCHAR" />
		<result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, descp, createtime
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from role
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectByUser" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from role
		where id = #{rid,jdbcType=INTEGER}
	</select>
	
	<select id="selectByName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from role
		where name = #{name}
	</select>
	
	
	<select id="getRoleByUser" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from role
		where id = (select rid from user where account=#{account})
	</select>

	<select id="loadRoles" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
	</select>
	
	<select id="getByPermission" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role
		where id in (select rid from role_permission where pid=#{pid})
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	

	
	<insert id="insert" parameterType="richinfo.mm.monitor.web.enties.Role">
		insert into role (id, name,
		descp,
		createtime)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{descp,jdbcType=VARCHAR},
		#{createtime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="richinfo.mm.monitor.web.enties.Role">
		insert into role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="descp != null">
				descp,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="descp != null">
				#{descp,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="richinfo.mm.monitor.web.enties.Role">
		update role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="descp != null">
				descp = #{descp,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="richinfo.mm.monitor.web.enties.Role">
		update role
		set
		name = #{name,jdbcType=VARCHAR},
		descp = #{descp,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
</mapper>